name: 🏗️ Build Revanced
on:
  schedule:
    - cron: '0 6 * * *'
  push:
    paths:
      - .github/workflows/build-daily.yaml
env:
  RV_PATCH_API: "https://api.github.com/repos/revanced/revanced-patches/releases/latest"
  MY_API: "https://api.github.com/repos/rolyyu/revanced/releases/latest"
  
jobs:
  check_latest:
    name: Check latest release
    runs-on: ubuntu-latest

    steps:
      - name: Check whether a new version has been released 
        id: checker
        run: |
          RV_TAG=$(curl -s -L $RV_PATCH_API | grep "tag_name" | sed -nE 's|.*name\": \"(.*)\",|\1|p')
          MY_TAG=$(curl -s -L $MY_API | grep "tag_name" | sed -nE 's|.*name\": \"(.*)\",|\1|p')

          if [[ "$RV_TAG" == "${MY_TAG%-*}" ]]; then
            echo "newer_version=true" >> $GITHUB_OUTPUT
          else
            echo "newer_version=false" >> $GITHUB_OUTPUT
          fi
    
    outputs:
      newer_version: ${{ steps.checker.outputs.newer_version }}

  build_revanced_youtube:
    name: Build Revanced Youtube
    runs-on: ubuntu-latest

    needs: [check_latest]
    if: needs.check_latest.outputs.newer_version == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build youtube
        run: ./revanced.sh youtube

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: youtube
          path: youtube*.apk

  build_revanced_youtube_music:
    name: Build Revanced Youtube Music
    runs-on: ubuntu-latest

    needs: [check_latest]
    if: needs.check_latest.outputs.newer_version == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build youtube-music
        run: ./revanced.sh youtube-music

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: youtube-music
          path: youtube-music*.apk

  build_revanced_tiktok:
    name: Build Revanced Tiktok
    runs-on: ubuntu-latest

    needs: [check_latest]
    if: needs.check_latest.outputs.newer_version == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build tiktok
        run: ./revanced.sh tiktok

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tiktok
          path: tiktok*.apk

  publish:
    name: Publish Release
    needs: [build_revanced_youtube, build_revanced_youtube_music, build_revanced_tiktok]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
      - name: Download artifacts
        run: ls -R

      - name: Release
        run: |
          PATCHES=$(curl -s -L $RV_PATCH_API)
          TAGNAME=$(echo ${PATCHES} | sed -nE 's|.*tag_name\": \"(.*)\", \"target_commitish.*|\1|p')
          TITLE="Revanced APP pacthes ${TAGNAME} $(date +'%Y-%m-%d %H:%M')"
          NOTES=$(echo ${PATCHES} | sed -nE 's|.*body\": \"(.*)\", \"reactions.*|\1|p')
          gh release create "${TAGNAME}-$(date +'%Y%m%d%H%M')" \
          -t "${TITLE}" \
          -n "${NOTES//'\n'/$'\n'}" \
          $(find . -name '*.apk' -exec ls {} \;)
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
